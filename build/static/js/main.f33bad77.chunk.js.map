{"version":3,"sources":["services/clubService.js","services/eventService.js","services/userService.js","services/adminService.js","reducers/reducer.js","components/UserInfo.js","components/HomePage.js","components/MyClubs.js","components/MyEvents.js","components/MyAnnouncements.js","components/ClubPage.js","components/ClubSearch.js","components/EventPage.js","components/EventSearch.js","components/ClubAdminPage.js","components/AdminPage.js","components/EventAdminPage.js","components/BaseApp.js","components/LoginPage.js","components/App.js","store.js","index.js"],"names":["baseUrl","getClubList","searchField","a","axios","get","response","data","getClubInfo","userId","clubId","getClubEvents","createClub","clubData","post","updateClub","put","deleteClub","delete","addClubMember","removeClubMember","addClubInterest","interest","toAdd","deleteClubInterest","addClubAnnouncement","announcementText","deleteClubAnnouncement","announcementId","clubService","getEventInfo","eventId","createEvent","deleteEvent","editEvent","addEventAtendee","removeEventAtendee","eventService","createUser","username","password","loginUser","deleteUser","getUserInfo","updateUsername","addUserInterest","deleteUserInterest","getAnnouncements","getClubs","getEvents","userService","getAdminClubList","getAdminClubInfo","getAdminEventInfo","adminService","defaultState","authToken","interests","announcements","clubs","events","adminClubs","logoutUser","dispatch","userInfo","getAdminClubs","alert","addClub","removeClub","modifyClub","createAnnouncement","deleteAnnouncement","addEvent","modifyEvent","removeEvent","reducer","state","action","type","token","UserInfo","useDispatch","useSelector","userInterests","removeUser","removeInterest","onSubmit","event","preventDefault","newUsername","target","value","name","onClick","map","HomePage","linkStyle","padding","style","to","MyClubs","getButton","club","IsAdmin","unfollowClub","ClubId","ClubName","MyEvents","getEventButton","RegistrationRequired","IsRegistered","unrsvpEvent","EventID","rsvpEvent","EventName","EventDescription","StartTime","EndTime","MyAnnouncements","announcement","AnnouncementTime","AnnouncementText","AnnouncementID","ClubPage","params","useParams","useState","clubInfo","setClubInfo","useEffect","getClubData","IsFollowing","followClub","ClubDescription","Website","Email","LocationName","Street","BuildingNo","ZipCode","CityName","StateName","EventId","ClubSearch","location","useLocation","searchParam","setSearchParam","clubList","setClubList","handleSearchSubmit","pathname","onChange","EventPage","eventInfo","setEventInfo","getData","eventData","eventButton","EventSearch","ClubAdminPage","clubName","setClubName","website","setWebsite","email","setEmail","clubDescription","setClubDescription","eventName","setEventName","eventDescription","setEventDescription","eventStartTime","setEventStartTime","eventEndTime","setEventEndTime","eventRegistrationRequired","setEventRegistrationRequired","eventCapacity","setEventCapacity","capacity","parseInt","description","addInterest","addAnnouncement","removeAnnouncement","followers","length","follower","AdminPage","setName","setDescription","locationName","setLocationName","street","setStreet","buildingNo","setBuildingNo","zip","setZip","city","setCity","setState","buildingData","EventAdminPage","registrationRequired","setRegistrationRequired","setCapacity","Capacity","updateEvent","BaseApp","path","element","LoginPage","setUsername","setPassword","newUser","setNewUser","newPassword","setNewPassword","createUserHandler","loginComponent","createUserComponent","App","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Store","document","getElementById"],"mappings":"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","file":"static/js/main.f33bad77.chunk.js","sourcesContent":["import axios from 'axios'\n\n// base url for get info about club\nconst baseUrl = '/api/club'\n\nconst getClubList = async (searchField) => {\n    const response = await axios.get(`${baseUrl}/?searchField=${searchField}`)\n    return response.data\n}\n\nconst getClubInfo = async (userId, clubId) => {\n    const response = await axios.get(`${baseUrl}/${clubId}/${userId}`)\n    return response.data\n}\n\nconst getClubEvents = async (clubId) => {\n    const response = await axios.get(`${baseUrl}/${clubId}/events`)\n    return response.data\n}\n\nconst createClub = async (userId, clubData) => {\n    await axios.post(`${baseUrl}/${userId}`, {...clubData})\n}\n\nconst updateClub = async (clubId, clubData) => {\n    await axios.put(`${baseUrl}/${clubId}`, {...clubData})\n}\n\nconst deleteClub = async (clubId) => {\n    await axios.delete(`${baseUrl}/${clubId}`)\n}\n\nconst addClubMember = async (userId, clubId) => {\n    await axios.post(`${baseUrl}/${clubId}/members/${userId}`)\n}\n\nconst removeClubMember = async (userId, clubId) => {\n    await axios.delete(`${baseUrl}/${clubId}/members/${userId}`)\n}\n\nconst addClubInterest = async (clubId, interest) => {\n    await axios.put(`${baseUrl}/interests/${clubId}`, {interest, toAdd: true})\n}\n\nconst deleteClubInterest = async (clubId, interest) => {\n    await axios.put(`${baseUrl}/interests/${clubId}`, {interest, toAdd: false})\n}\n\nconst addClubAnnouncement = async (clubId, announcementText) => {\n    await axios.post(`${baseUrl}/${clubId}/announcements`, {announcementText})\n}\n\nconst deleteClubAnnouncement = async (clubId, announcementId) => {\n    await axios.delete(`${baseUrl}/${clubId}/announcements/${announcementId}`)\n}\n\nconst clubService = {getClubList, getClubInfo, getClubEvents,createClub, updateClub, deleteClub, addClubMember, removeClubMember, addClubInterest, deleteClubInterest, addClubAnnouncement, deleteClubAnnouncement}\n\nexport default clubService","import axios from 'axios'\n\n// base url for get info about club\nconst baseUrl = '/api/event'\n\nconst getEventInfo = async (userId, eventId) => {\n    const response = await axios.get(`${baseUrl}/${eventId}/${userId}`)\n    return response.data\n}\n\nconst createEvent = async (clubId, data) => {\n    await axios.post(`${baseUrl}/${clubId}`, {...data})\n}\n\nconst deleteEvent = async (eventId) => {\n    await axios.delete(`${baseUrl}/${eventId}`)\n}\n\nconst editEvent = async (eventId, data) => {\n    await axios.put(`${baseUrl}/${eventId}`, {...data})\n}\n\nconst addEventAtendee = async (userId, eventId) => {\n    await axios.post(`${baseUrl}/${eventId}/reservation/${userId}`)\n}\n\nconst removeEventAtendee = async (userId, eventId) => {\n    await axios.delete(`${baseUrl}/${eventId}/reservation/${userId}`)\n}\n\nconst eventService = {addEventAtendee, removeEventAtendee, getEventInfo, createEvent, deleteEvent, editEvent}\n\nexport default eventService","import axios from 'axios'\n\n// base url for get info about user\nconst baseUrl = '/api/user'\n\nconst createUser = async (username, password) => {\n    await axios.post(`${baseUrl}`, {username, password})\n}\n\nconst loginUser = async (username, password) => {\n    const response = await axios.post(`/api/login`, {username, password})\n    return response.data\n}\n\nconst deleteUser = async userId => {\n    await axios.delete(`${baseUrl}/${userId}`)\n}\n\nconst getUserInfo = async userId => {\n    const response = await axios.get(`${baseUrl}/${userId}`)\n    return response.data\n}\n\nconst updateUsername = async (userId, username) => {\n    await axios.put(`${baseUrl}/${userId}`, {username})\n}\n\nconst addUserInterest = async (userId, interest) => {\n    await axios.put(`${baseUrl}/interests/${userId}`, {interest, toAdd: true})\n}\n\nconst deleteUserInterest = async (userId, interest) => {\n    await axios.put(`${baseUrl}/interests/${userId}`, {interest, toAdd: false})\n}\n\nconst getAnnouncements = async userId => {\n    const response = await axios.get(`${baseUrl}/announcements/${userId}`)\n    return response.data\n}\n\nconst getClubs = async userId => {\n    const response = await axios.get(`${baseUrl}/clubs/${userId}`)\n    return response.data\n}\n\nconst getEvents = async userId => {\n    const response = await axios.get(`${baseUrl}/events/${userId}`)\n    return response.data\n}\n\nconst userService = {getUserInfo, updateUsername, addUserInterest, deleteUserInterest, getAnnouncements, getClubs, getEvents, createUser, loginUser, deleteUser}\n\nexport default userService","import axios from 'axios'\n\nconst baseUrl = '/api/admin'\n\nconst getAdminClubList = async (userId) => {\n    const response = await axios.get(`${baseUrl}/${userId}`)\n    return response.data\n}\n\nconst getAdminClubInfo = async (userId, clubId) => {\n    const response = await axios.get(`${baseUrl}/club/${clubId}/${userId}`)\n    return response.data\n}\n\nconst getAdminEventInfo = async (userId, eventId) => {\n    const response = await axios.get(`${baseUrl}/event/${eventId}/${userId}`)\n    return response.data\n}\n\nconst adminService = {getAdminClubList, getAdminClubInfo, getAdminEventInfo}\n\nexport default adminService\n","import clubService from \"../services/clubService\"\nimport eventService from \"../services/eventService\"\nimport userService from \"../services/userService\"\nimport adminService from \"../services/adminService\"\n\nconst defaultState = {userId: null, authToken: null, username: null, interests: [], announcements: [], clubs: [], events: [], adminClubs: []} \n\nconst reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_AUTH_INFO':\n            return {...state, userId: action.data.userId, username: action.data.username, authToken: action.data.token}\n        case 'SET_USER_INFO':\n            return {...state, interests: action.data.interests, username: action.data.username}\n        case 'SET_ANNOUNCEMENTS':\n            return {...state, announcements: action.data}\n        case 'SET_CLUBS':\n            return {...state, clubs: action.data}\n        case 'SET_EVENTS':\n            return {...state, events: action.data}\n        case 'SET_ADMIN_CLUBS':\n            return {...state, adminClubs: action.data}\n        case 'LOGOUT':\n            return defaultState\n        default: \n          return state\n    }\n}\n\nexport const loginUser = (username, password) => {\n    return async dispatch => {\n        try {\n            const userInfo = await userService.loginUser(username, password)\n            dispatch({'type': 'SET_AUTH_INFO', 'data': userInfo})\n            dispatch(getUserInfo(userInfo.userId))\n            dispatch(getAnnouncements(userInfo.userId))\n            dispatch(getClubs(userInfo.userId))\n            dispatch(getEvents(userInfo.userId))\n            dispatch(getAdminClubs(userInfo.userId))\n        } catch (error) {\n            alert(error.response.data)\n        }\n    }\n}\n\nexport const logoutUser = () => {\n    return async dispatch => {\n        dispatch({'type': 'LOGOUT'})\n    }\n}\n\nexport const getUserInfo = (userId) => {\n    return async dispatch => {\n        const userInfo = await userService.getUserInfo(userId)\n        dispatch({'type': 'SET_USER_INFO', 'data': userInfo})\n    }\n}\n\nexport const getAnnouncements = (userId) => {\n    return async dispatch => {\n        const announcements = await userService.getAnnouncements(userId)\n        dispatch({'type': 'SET_ANNOUNCEMENTS', 'data': announcements})\n    }\n}\n\nexport const getClubs = (userId) => {\n    return async dispatch => {\n        const clubs = await userService.getClubs(userId)\n        dispatch({'type': 'SET_CLUBS', 'data': clubs})\n    }\n}\n\nexport const getEvents = (userId) => {\n    return async dispatch => {\n        const events = await userService.getEvents(userId)\n        dispatch({'type': 'SET_EVENTS', 'data': events})\n    }\n}\n\nexport const getAdminClubs = (userId) => {\n    return async dispatch => {\n        const clubs = await adminService.getAdminClubList(userId)\n        dispatch({'type': 'SET_ADMIN_CLUBS', 'data': clubs})\n    }\n}\n\nexport const updateUsername = (userId, newUsername) => {\n    return async dispatch => {\n        try {\n            await userService.updateUsername(userId, newUsername)\n            dispatch(getUserInfo(userId))\n        } catch (error) {\n            alert(error.response.data)\n        }\n    }\n}\n\nexport const addUserInterest = (userId, interest) => {\n    return async dispatch => {\n        await userService.addUserInterest(userId, interest)\n        dispatch(getUserInfo(userId))\n    }\n}\n\nexport const deleteUserInterest = (userId, interest) => {\n    return async dispatch => {\n        await userService.deleteUserInterest(userId, interest)\n        dispatch(getUserInfo(userId))\n    }\n}\n\nexport const addClubMember = (userId, clubId) => {\n    return async dispatch => {\n        await clubService.addClubMember(userId, clubId)\n        dispatch(getClubs(userId))\n        dispatch(getEvents(userId))\n        dispatch(getAnnouncements(userId))\n    }\n}\n\nexport const removeClubMember = (userId, clubId) => {\n    return async dispatch => {\n        await clubService.removeClubMember(userId, clubId)\n        dispatch(getClubs(userId))\n        dispatch(getEvents(userId))\n        dispatch(getAnnouncements(userId))\n    }\n}\n\nexport const addEventAtendee = (userId, eventId) => {\n    return async dispatch => {\n        try {\n            await eventService.addEventAtendee(userId, eventId)\n            dispatch(getEvents(userId))\n        } catch (error) {\n            alert(error.response.data)\n        }\n    }\n}\n\nexport const removeEventAtendee = (userId, eventId) => {\n    return async dispatch => {\n        await eventService.removeEventAtendee(userId, eventId)\n        dispatch(getEvents(userId))\n    }\n}\n\nexport const addClub = (userId, data) => {\n    return async dispatch => {\n        try {\n            await clubService.createClub(userId, data)\n            dispatch(getAdminClubs(userId))\n            dispatch(getClubs(userId))\n            dispatch(getAnnouncements(userId))\n            dispatch(getEvents(userId))\n        } catch (error) {\n            alert(error.response.data)\n        }\n    }\n}\n\nexport const removeClub = (clubId, userId) => {\n    return async dispatch => {\n        await clubService.deleteClub(clubId)\n        dispatch(getAdminClubs(userId))\n        dispatch(getClubs(userId))\n        dispatch(getAnnouncements(userId))\n        dispatch(getEvents(userId))\n    }\n}\n\nexport const modifyClub = (clubId, userId, data) => {\n    return async dispatch => {\n        try {\n            await clubService.updateClub(clubId, data)\n            dispatch(getAdminClubs(userId))\n            dispatch(getClubs(userId))\n            dispatch(getAnnouncements(userId))\n        } catch (error) {\n            alert(error.response.data)\n        }\n        \n    }\n}\n\nexport const createAnnouncement = (clubId, userId, announcementText) => {\n    return async dispatch => {\n        await clubService.addClubAnnouncement(clubId, announcementText)\n        dispatch(getAnnouncements(userId))\n    }\n}\n\nexport const deleteAnnouncement = (clubId, userId, announcementId) => {\n    return async dispatch => {\n        await clubService.deleteClubAnnouncement(clubId, announcementId)\n        dispatch(getAnnouncements(userId))\n    }\n}\n\nexport const addEvent = (clubId, userId, data) => {\n    return async dispatch => {\n        try {\n            await eventService.createEvent(clubId, data)\n            dispatch(getEvents(userId))\n        } catch (error) {\n            alert(error.response.data)\n        }\n    }\n}\n\nexport const modifyEvent = (eventId, userId, data) => {\n    return async dispatch => {\n        try {\n            await eventService.editEvent(eventId, data)\n            dispatch(getEvents(userId))\n        } catch (error) {\n            alert(error.response.data)\n        }\n    }\n}\n\nexport const removeEvent = (eventId, userId) => {\n    return async dispatch => {\n        await eventService.deleteEvent(eventId)\n        dispatch(getEvents(userId))\n    }\n}\n\nexport const deleteUser = userId => {\n    return async dispatch => {\n        await userService.deleteUser(userId)\n        dispatch(logoutUser())\n    }\n}\n\nexport default reducer","import { useDispatch, useSelector } from \"react-redux\"\nimport { addUserInterest, deleteUser, deleteUserInterest, updateUsername } from \"../reducers/reducer\"\n\nconst UserInfo = () => {\n  const dispatch = useDispatch()\n  const userId = useSelector(state => state.userId)\n  const username = useSelector(state => state.username)\n  const userInterests = useSelector(state => state.interests)\n  const changeUsername = event => {\n      event.preventDefault()\n      dispatch(updateUsername(userId, event.target.username.value))\n  }\n  const removeUser = () => {\n      dispatch(deleteUser(userId))\n  }\n  const addInterest = event => {\n      event.preventDefault()\n      dispatch(addUserInterest(userId, event.target.interest.value))\n  }\n  const removeInterest = interest => {\n      dispatch(deleteUserInterest(1, interest))\n  }\n  return (\n      <div>\n          Username: {username} <br />\n          <form onSubmit={changeUsername}>\n              <input type=\"text\" name=\"username\" />\n              <input type=\"submit\" value=\"switch username\" />\n          </form> <p />\n          <button onClick={() => removeUser()}>delete user</button><p/>\n          Your Interests:\n          <ul>{userInterests.map(interest => \n            <li key={interest}>\n                {interest}\n                <button onClick={() => removeInterest(interest)}>remove interest</button>\n            </li>\n            )}</ul>\n          <form onSubmit={addInterest}>\n              <input type=\"text\" name=\"interest\" />\n              <input type=\"submit\" value=\"add interest\" />\n          </form>\n      </div>\n  )\n}\n\nexport default UserInfo","import { Outlet } from \"react-router\"\nimport { Link } from \"react-router-dom\"\n\nconst HomePage = () => {\n    const linkStyle = {padding: 10}\n    return (\n        <div>\n            <br />\n            <h1>Welcome to Clubhub!</h1>\n            <div>\n                <Link style={linkStyle} to='/home/clubs'>my clubs</Link>\n                <Link style={linkStyle} to='/home/events'>my events</Link>\n                <Link style={linkStyle} to='/home/announcements'>my announcements</Link>\n            </div>\n            <div>\n                <Outlet />\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage","// TODO: hyperlink club names to club page\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { removeClubMember } from \"../reducers/reducer\"\n\nconst MyClubs = () => {\n    const dispatch = useDispatch()\n    const userId = useSelector(state => state.userId)\n    const clubs = useSelector(state => state.clubs)\n    const getButton = club => {\n      if (club.IsAdmin) {\n        return null\n      } else {\n        return <button onClick={() => unfollowClub(club.ClubId)}>unfollow club</button>\n      }\n    }\n    const unfollowClub = clubId => {\n        dispatch(removeClubMember(userId, clubId))\n    }\n    return (\n        <div>\n            <h2>Following Clubs: </h2>\n            <ul>{clubs.map(club => \n              <li key={club.ClubId}>\n                <Link to={`/clubs/${club.ClubId}`}>{club.ClubName} </Link>\n                {getButton(club)}\n              </li>\n            )}</ul>\n        </div>\n        \n    )\n}\n\nexport default MyClubs","// TODO: hyperlink event names to event page\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { addEventAtendee, removeEventAtendee } from \"../reducers/reducer\"\n\nconst MyEvents = () => {\n    const dispatch = useDispatch()\n    const userId = useSelector(state => state.userId)\n    const events = useSelector(state => state.events)\n    const getEventButton = (event) => {\n        if (!event.RegistrationRequired) {\n            return null\n        } else if (event.IsRegistered) {\n            return <button onClick={() => unrsvpEvent(event.EventID)}>unrsvp event</button>\n        } else {\n            return <button onClick={() => rsvpEvent(event.EventID)}>rsvp event</button>\n        }\n    }\n    const rsvpEvent = eventId => {\n        dispatch(addEventAtendee(userId, eventId))\n    }\n    const unrsvpEvent = eventId => {\n        dispatch(removeEventAtendee(userId, eventId))\n    }\n    return (\n        <div>\n            <h2>Upcoming Events: </h2>\n            <div>{events.map(event => \n              <div key={event.EventID}><Link to={`/events/${event.EventID}`}> Event Name: {event.EventName} </Link><br />\n                Event Description: {event.EventDescription} <br />\n                Event Start Time: {event.StartTime} <br />\n                Event End Time: {event.EndTime} <br/>\n                {getEventButton(event)} <p />\n              </div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default MyEvents","import { useSelector } from \"react-redux\"\n\n\nconst MyAnnouncements = () => {\n    const announcements = useSelector(state => state.announcements)\n    return (\n        <div>\n            <h2>Annoucements By Your Clubs: </h2>\n            <div>{announcements.map(announcement => \n              <div key={announcement.AnnouncementID}>Club: {announcement.ClubName }<br />\n                {announcement.AnnouncementTime} <br />\n                {announcement.AnnouncementText} <p />\n              </div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default MyAnnouncements","import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { addClubMember, removeClubMember } from \"../reducers/reducer\"\nimport clubService from \"../services/clubService\"\n\nconst ClubPage = () => {\n    const params = useParams()\n    const dispatch = useDispatch()\n    const userId = useSelector(state => state.userId)\n    const [clubInfo, setClubInfo] = useState(null)\n    useEffect(() => {\n        const getClubData = async () => {\n            const clubData = await clubService.getClubInfo(userId, params.clubId)\n            setClubInfo(clubData)\n        }\n        if (!clubInfo || clubInfo.ClubId !== params.clubId) {\n            getClubData()\n        }\n    }, [params.clubId, userId])\n    const getClubButton = () => {\n        if (clubInfo.IsAdmin) {\n            return null\n        } else if (clubInfo.IsFollowing) {\n            return <button onClick={() => unfollowClub(clubInfo.ClubId)}>unfollow club</button> \n        } else {\n            return <button onClick={() => followClub(clubInfo.ClubId)}>follow club</button>\n        }\n    }\n    const unfollowClub = async clubId => {\n        setClubInfo({...clubInfo, IsFollowing: false})\n        dispatch(removeClubMember(userId, clubId))\n    }\n    const followClub = async clubId => {\n        setClubInfo({...clubInfo, IsFollowing: true})\n        dispatch(addClubMember(userId, clubId))\n    }\n    if (!clubInfo) {\n        return \"Loading...\"\n    } else {\n        return (\n            <div>\n                <h1> {clubInfo.ClubName} </h1>\n                Description: {clubInfo.ClubDescription} <br />\n                Website: {clubInfo.Website} <br />\n                Email: {clubInfo.Email} <br />\n                {clubInfo.LocationName ? <div>LocationName: {clubInfo.LocationName}</div> : null} <br />\n                Street: {clubInfo.Street} <br />\n                {clubInfo.BuildingNo ? <div>BuildingNo: {clubInfo.BuildingNo}</div> : null} <br />\n                ZipCode: {clubInfo.ZipCode} <br />\n                City: {clubInfo.CityName} <br />\n                State: {clubInfo.StateName} <p />\n                {getClubButton()}\n                <div>\n                    <h2>Upcoming Events:</h2>\n                    <div>\n                        <div>{clubInfo.events.map(event => <div key={event.EventId}> \n                        <Link to={`/events/${event.EventId}`}> {event.EventName}</Link> <br />\n                        Registration Required: {event.RegistrationRequired ? \"Yes\" : \"No\"} <p />\n                        </div>)}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ClubPage","import { useState } from \"react\";\nimport { Outlet } from \"react-router\"\nimport {Link} from 'react-router-dom'\nimport clubService from \"../services/clubService\";\nimport {useLocation} from 'react-router-dom'\n\nconst ClubSearch = () => {\n    const location = useLocation()\n    const [searchParam, setSearchParam] = useState(\"\")\n    const [clubList, setClubList] = useState([])\n    const handleSearchSubmit = async (event) => {\n        event.preventDefault()\n        const data = await clubService.getClubList(searchParam)\n        setClubList(data)\n    } \n    const handleSearchChange = (event) => {\n        event.preventDefault()\n        setSearchParam(event.target.value)\n    }\n    if (location.pathname === '/clubs') {\n        return (\n            <div> \n                <br/>\n                <form onSubmit={handleSearchSubmit}> \n                    <label>\n                        Search for Clubs: \n                        <input type=\"text\" value={searchParam} onChange={handleSearchChange} />\n                    </label>\n                    <input type=\"submit\" />\n                </form>\n                <br />\n                {clubList.map(club => <div key={club.ClubId}><Link to={`${club.ClubId}`}>{club.ClubName}</Link></div>)}\n            </div>\n        )\n    } else {\n        return <Outlet />\n    }\n}\n\nexport default ClubSearch","import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router\"\nimport { addEventAtendee, removeEventAtendee } from \"../reducers/reducer\"\nimport eventService from \"../services/eventService\"\n\nconst EventPage = () => {\n    const params = useParams()\n    const dispatch = useDispatch()\n    const userId = useSelector(state => state.userId)\n    const [eventInfo, setEventInfo] = useState([])\n    const getData = async () => {\n        const eventData = await eventService.getEventInfo(userId, params.eventId)\n        setEventInfo(eventData)\n    }\n    useEffect(() => {\n        getData()\n    }, [])\n    const getEventButton = () => {\n        if (!eventInfo.RegistrationRequired) {\n            return null\n        } else if (eventInfo.IsRegistered) {\n            return <button onClick={() => unrsvpEvent(eventInfo.EventID)}>unrsvp event</button>\n        } else {\n            return <button onClick={() => rsvpEvent(eventInfo.EventID)}>rsvp event</button>\n        }\n    }\n    // handle case with overcapacity + add confirmation\n    const rsvpEvent = eventId => {\n        dispatch(addEventAtendee(userId, eventId))\n        getData()\n    }\n    const unrsvpEvent = eventId => {\n        setEventInfo({...eventInfo, IsRegistered: false})\n        dispatch(removeEventAtendee(userId, eventId))\n    }\n    if (!eventInfo) {\n        return \"Loading...\"\n    } else {\n        const eventButton = getEventButton()\n        return (\n            <div>\n                <h2>{eventInfo.EventName} </h2>\n                Event Description: {eventInfo.EventDescription} <br />\n                Event Start Time: {eventInfo.StartTime} <br />\n                Event End Time: {eventInfo.EndTime} <br/>\n                Event Registration Required: {eventInfo.RegistrationRequired ? \"Yes\" : \"No\"} <br />\n                {eventButton} <p />\n            </div>\n        )\n    }\n    \n}\n\nexport default EventPage","import { Outlet } from \"react-router\";\n\nconst EventSearch = () => <Outlet />\n\nexport default EventSearch","import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { addEvent, createAnnouncement, deleteAnnouncement, modifyClub, removeEvent } from \"../reducers/reducer\"\nimport adminService from \"../services/adminService\"\nimport clubService from \"../services/clubService\"\n\nconst ClubAdminPage = () => {\n    const params = useParams()\n    const dispatch = useDispatch()\n    const userId = useSelector(state => state.userId)\n    const [clubInfo, setClubInfo] = useState(null)\n    const [clubName, setClubName] = useState(\"\")\n    const [website, setWebsite] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [clubDescription, setClubDescription] = useState(\"\")\n    const [eventName, setEventName] = useState(\"\")\n    const [eventDescription, setEventDescription] = useState(\"\")\n    const [eventStartTime, setEventStartTime] = useState(\"\")\n    const [eventEndTime, setEventEndTime] = useState(\"\")\n    const [eventRegistrationRequired, setEventRegistrationRequired] = useState(false)\n    const [eventCapacity, setEventCapacity] = useState(\"\")\n    const getClubData = async () => {\n        const clubData = await adminService.getAdminClubInfo(userId, params.clubId)\n        setClubInfo(clubData)\n        setClubName(clubData.ClubName)\n        setWebsite(clubData.Website)\n        setEmail(clubData.Email)\n        setClubDescription(clubData.ClubDescription)\n    }\n    useEffect(() => {\n        if (!clubInfo || clubInfo.ClubId !== params.clubId) {\n            getClubData()\n        }\n    }, [])\n    const createEvent = async event => {\n        event.preventDefault()\n        const capacity = eventRegistrationRequired ? parseInt(eventCapacity) : null\n        dispatch(addEvent(clubInfo.ClubId, userId, {eventName, eventDescription, eventStartTime, eventEndTime, eventRegistrationRequired, capacity}))\n        await getClubData()\n        setEventName(\"\")\n        setEventDescription(\"\")\n        setEventStartTime(\"\")\n        setEventEndTime(\"\")\n        setEventRegistrationRequired(false)\n        setEventCapacity(\"\")\n    }\n    const deleteEvent = async eventId => {\n        dispatch(removeEvent(eventId, userId))\n        await getClubData()\n    }\n    const updateClub = async event => {\n        event.preventDefault()\n        await dispatch(modifyClub(clubInfo.ClubId, userId, {name: clubName, website, email, description: clubDescription}))\n        await getClubData()\n    }\n    const addInterest = async event => {\n        event.preventDefault()\n        await clubService.addClubInterest(clubInfo.ClubId, event.target.interest.value)\n        await getClubData()\n    }\n    const removeInterest = async interest => {\n        await clubService.deleteClubInterest(clubInfo.ClubId, interest)\n        await getClubData()\n    }\n    const addAnnouncement = async event => {\n        event.preventDefault()\n        dispatch(createAnnouncement(clubInfo.ClubId, userId, event.target.announcement.value))\n        await getClubData()\n    }\n    const removeAnnouncement = async announcementId => {\n        dispatch(deleteAnnouncement(clubInfo.ClubId, userId, announcementId))\n        await getClubData()\n    }\n    if (!clubInfo) {\n        return \"Loading...\"\n    } else {\n        return (\n            <div>\n                <br />\n                <h1>Manage Club</h1>\n                <form onSubmit={updateClub}>  \n                    <label>Name: <input type=\"text\" name=\"name\" value={clubName} onChange={(event) => setClubName(event.target.value)}/> </label><br />\n                    <label>Website: <input type=\"text\" name=\"website\" value={website} onChange={(event) => setWebsite(event.target.value)}/> </label> <br />\n                    <label>Email: <input type=\"text\" name=\"email\" value={email} onChange={(event) => setEmail(event.target.value)}/> </label> <br /> <br />\n                    <label>Description: <textarea name=\"description\" value={clubDescription} onChange={(event) => setClubDescription(event.target.value)}/></label> <br />\n                    <input type=\"submit\" value=\"Update Club Info\" />\n                </form> <p />\n                Location: {clubInfo.LocationName ? clubInfo.LocationName : null} <br />\n                Street: {clubInfo.Street} <br />\n                BuildingNo: {clubInfo.BuildingNo ? clubInfo.BuildingNo : null} <br />\n                ZipCode: {clubInfo.ZipCode} <br />\n                City: {clubInfo.CityName} <br />\n                State: {clubInfo.StateName} <p />\n                <h2>Events: </h2>\n                <div>{clubInfo.events.map(event => <div key={event.EventID}><Link to={`/admin/event/${event.EventID}`}> {event.EventName} </Link>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button onClick={() => deleteEvent(event.EventID)}>delete event</button><br /></div>)}</div>\n                <h3>Create New Event:</h3>\n                <form onSubmit={createEvent}>\n                    <label>Name: <input type=\"text\" name=\"name\" value={eventName} onChange={(event) => setEventName(event.target.value)}/> </label>\n                    <label>Description: <input type=\"text\" name=\"description\" value={eventDescription} onChange={(event) => setEventDescription(event.target.value)}/> </label>\n                    <label>Start Time: <input type=\"text\" name=\"startTime\" value={eventStartTime} onChange={(event) => setEventStartTime(event.target.value)}/> </label>\n                    <label>End Time: <input type=\"text\" name=\"endTime\" value={eventEndTime} onChange={(event) => setEventEndTime(event.target.value)}/> </label>\n                    <label>Require Registration? <input type=\"checkbox\" name=\"registrationRequired\" value={eventRegistrationRequired} onChange={(event) => setEventRegistrationRequired(event.target.value)}/> </label>\n                    <label>Capacity: <input type=\"text\" name=\"capacity\" value={eventCapacity} onChange={(event) => setEventCapacity(event.target.value)}/> </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                <p/>\n                <h2>Announcements:</h2> <ul>{clubInfo.announcements.map(announcement => <li key={announcement.AnnouncementID}>{announcement.AnnouncementText}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button onClick={() => removeAnnouncement(announcement.AnnouncementID)}>remove announcement</button></li>)}</ul>\n                <form onSubmit={addAnnouncement}>\n                    <input type=\"text\" name=\"announcement\" />\n                    <input type=\"submit\" value=\"add announcement\" />\n                </form><p/>\n                <h2>Followers: {clubInfo.followers.length}</h2> {clubInfo.followers.map(follower => <div key={follower}>{follower}<br/></div>)}\n                <h2>Edit Interests: </h2> <ul>{clubInfo.interests.map(interest => <li key={interest}>{interest}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button onClick={() => removeInterest(interest)}>remove interest</button></li>)}</ul>\n                <form onSubmit={addInterest}>\n                    <input type=\"text\" name=\"interest\" />\n                    <input type=\"submit\" value=\"add interest\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ClubAdminPage","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Outlet, useLocation } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { addClub, removeClub } from \"../reducers/reducer\"\n\nconst AdminPage = () => {\n    const location = useLocation()\n    const dispatch = useDispatch()\n    const userId = useSelector(state => state.userId)\n    const adminClubs = useSelector(state => state.adminClubs)\n    const [name, setName] = useState(\"\")\n    const [website, setWebsite] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [locationName, setLocationName] = useState(\"\")\n    const [street, setStreet] = useState(\"\")\n    const [buildingNo, setBuildingNo] = useState(\"\")\n    const [zip, setZip] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n    const createClub = async event => {\n        event.preventDefault()\n        let buildingData = buildingNo === \"\" ? null : parseInt(buildingNo)\n        let locationData = locationName === \"\" ? null : locationName\n        dispatch(addClub(userId, {name, website, email, description, locationName: locationData, street, buildingNo: buildingData, zip, city, state}))\n        setName(\"\")\n        setWebsite(\"\")\n        setEmail(\"\")\n        setDescription(\"\")\n        setLocationName(\"\")\n        setStreet(\"\")\n        setBuildingNo(\"\")\n        setZip(\"\")\n        setCity(\"\")\n        setState(\"\")\n    }\n    const deleteClub = async clubId => {\n        dispatch(removeClub(clubId, userId))        \n    }\n    if (location.pathname === '/admin') {\n        return (\n            <div>\n                <p/>\n                Clubs You Manage: <p/>\n                {adminClubs.map(club => \n                    <div key={club.ClubId}> \n                        <Link to={`club/${club.ClubId}`}>{club.ClubName}</Link>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <button onClick={()=>deleteClub(club.ClubId)}>delete club</button><br />\n                    </div>\n                )} <br />\n                Create New Club: <br />\n                <form onSubmit={createClub}>\n                    <label>Name: <input type=\"text\" name=\"name\" value={name} onChange={(event) => setName(event.target.value)}/> </label>\n                    <label>Website: <input type=\"text\" name=\"website\" value={website} onChange={(event) => setWebsite(event.target.value)}/> </label>\n                    <label>Email: <input type=\"text\" name=\"email\" value={email} onChange={(event) => setEmail(event.target.value)}/> </label> <br />\n                    <label>Location Name: <input type=\"text\" name=\"location\" value={locationName} onChange={(event) => setLocationName(event.target.value)}/> </label>\n                    <label>Street Name: <input type=\"text\" name=\"street\" value={street} onChange={(event) => setStreet(event.target.value)}/> </label>\n                    <label>Building No (if applicable): <input type=\"text\" value={buildingNo} name=\"building\" onChange={(event) => setBuildingNo(event.target.value)}/> </label>\n                    <label>ZipCode: <input type=\"text\" name=\"zip\" value={zip} onChange={(event) => setZip(event.target.value)}/> </label>\n                    <label>City Name: <input type=\"text\" name=\"city\" value={city} onChange={(event) => setCity(event.target.value)}/> </label>\n                    <label>State Name: <input type=\"text\" name=\"state\" value={state} onChange={(event) => setState(event.target.value)}/> </label>\n                    <label>Description: <textarea name=\"description\" value={description} onChange={(event) => setDescription(event.target.value)}/></label> <br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    } else {\n        return <Outlet />\n    }\n}\n\nexport default AdminPage","import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router\"\nimport { modifyEvent } from \"../reducers/reducer\"\nimport adminService from \"../services/adminService\"\n\nconst EventAdminPage = () => {\n    const params = useParams()\n    const dispatch = useDispatch()\n    const userId = useSelector(state => state.userId)\n    const [eventInfo, setEventInfo] = useState(null)\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [registrationRequired, setRegistrationRequired] = useState(false)\n    const [capacity, setCapacity] = useState(\"\")\n    const getData = async () => {\n        const eventData = await adminService.getAdminEventInfo(userId, params.eventId)\n        setEventInfo(eventData)\n        setName(eventData.EventName)\n        setDescription(eventData.EventDescription)\n        setRegistrationRequired(eventData.RegistrationRequired)\n        setCapacity(eventData.Capacity)\n    }\n       \n    useEffect(() => {\n        if (!eventInfo || eventInfo.EventID !== params.eventId) {\n            getData()\n        }\n    }, [])\n    const updateEvent = async event => {\n        event.preventDefault()\n        await dispatch(modifyEvent(eventInfo.EventID, userId, {name, description, registrationRequired, capacity}))\n        await getData()\n    }\n    if (!eventInfo) {\n        return \"Loading...\"\n    } else {\n        return (\n            <div>\n                <br />\n                Modify Event:\n                <form onSubmit={updateEvent}>\n                    <label>Name: <input type=\"text\" name=\"name\" value={name} onChange={(event) => setName(event.target.value)}/> </label><br />\n                    <label>Description: <input type=\"text\" name=\"description\" value={description} onChange={(event) => setDescription(event.target.value)}/> </label><br />\n                    Start Time: {eventInfo.StartTime}<br />\n                    End Time: {eventInfo.EndTime}<br />\n                    <label>Require Registration? <input type=\"checkbox\" name=\"registrationRequired\" value={registrationRequired} onChange={(event) => setRegistrationRequired(event.target.value)}/> </label><br />\n                    <label>Capacity: <input type=\"text\" name=\"capacity\" value={capacity} onChange={(event) => setCapacity(event.target.value)}/> </label><br />\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default EventAdminPage\n\n","import { Link, Route, Routes} from 'react-router-dom';\nimport UserInfo from './UserInfo';\nimport HomePage from './HomePage'\nimport MyClubs from './MyClubs'\nimport MyEvents from './MyEvents'\nimport MyAnnouncements from './MyAnnouncements'\nimport ClubPage from './ClubPage';\nimport ClubSearch from './ClubSearch';\nimport EventPage from './EventPage';\nimport EventSearch from './EventSearch';\nimport ClubAdminPage from './ClubAdminPage';\nimport AdminPage from './AdminPage';\nimport EventAdminPage from './EventAdminPage';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from '../reducers/reducer';\n\nconst BaseApp = () => {\n    const dispatch = useDispatch()\n    const linkStyle = {padding: 10}\n    // callback function that dispatches logout action when link is clicked\n    const logout = event => {\n        event.preventDefault()\n        dispatch(logoutUser())\n    }\n    return (\n    <div>\n        <div>\n            <Link style={linkStyle} to='/'>home</Link>\n            <Link style={linkStyle} to='/clubs'>clubs</Link>\n            <Link style={linkStyle} to='/admin'>admin</Link>\n            <Link style={linkStyle} to='/info'>user info</Link>\n            <Link style={linkStyle} to=\"/\" onClick={logout}>logout</Link>\n        </div>\n        <Routes>\n            <Route path='' element={<HomePage />}/> \n            <Route path='home' element={<HomePage />}>\n                <Route path='clubs' element={<MyClubs />}/>\n                <Route path='events' element={<MyEvents />}/>\n                <Route path='announcements' element={<MyAnnouncements />}/>\n            </Route>\n            <Route path='clubs' element={<ClubSearch />}>\n                <Route path=':clubId' element={<ClubPage />}/>\n            </Route>\n            <Route path='events' element={<EventSearch />}>\n                <Route path=':eventId' element={<EventPage />}/>\n            </Route>\n            <Route path='admin' element={<AdminPage />}>\n                <Route path='club/:clubId' element={<ClubAdminPage />} />\n                <Route path='event/:eventId' element={<EventAdminPage />} />\n            </Route>\n            <Route path='info' element={<UserInfo />}/>\n        </Routes>\n    </div>\n    )\n}\n\nexport default BaseApp","import {useDispatch} from 'react-redux';\nimport {useState} from 'react';\nimport { loginUser } from '../reducers/reducer';\nimport userService from '../services/userService';\n\nconst LoginPage = () => {\n    // used to dispatch actions to change state\n    const dispatch = useDispatch()\n    // simple hooks to keep track of inputs on page\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [newUser, setNewUser] = useState(\"\")\n    const [newPassword, setNewPassword] = useState(\"\")\n\n    // callback that dispatches action to login user based on current inputs\n    const loginHandler = event => {\n        event.preventDefault()\n        dispatch(loginUser(username, password))\n    }\n\n    // callback that dispatches action to create user based on current inputs\n    const createUserHandler = async event => {\n        event.preventDefault()\n        try {\n            await userService.createUser(newUser, newPassword)\n            setNewUser(\"\")\n            setNewPassword(\"\")\n        } catch (error) {\n            alert(error.response.data)\n        } \n    }\n\n    // tracks changes in input box and updates component state accordingly\n    const handleUsernameChange = event => {\n        event.preventDefault()\n        setUsername(event.target.value)\n    }\n\n    // tracks changes in input box and updates component state accordingly\n    const handlePasswordChange = event => {\n        event.preventDefault()\n        setPassword(event.target.value)\n    }\n\n    // tracks changes in input box and updates component state accordingly\n    const handleNewUser = event => {\n        event.preventDefault()\n        setNewUser(event.target.value)\n    }\n\n    // tracks changes in input box and updates component state accordingly\n    const handleNewPassword = event => {\n        event.preventDefault()\n        setNewPassword(event.target.value)\n    }\n\n    // login form based on react-bootstrap component\n    const loginComponent = \n    <form onSubmit={loginHandler}>\n        <label>Username <input type=\"text\" name=\"username\" value={username} onChange={handleUsernameChange}/></label>\n        <label>Password <input type=\"password\" name=\"password\" value={password} onChange={handlePasswordChange}/></label>\n        <input type=\"submit\" value=\"Submit\" />\n    </form>\n\n    // create user form based on react-bootstrap component\n    const createUserComponent = \n    <form onSubmit={createUserHandler}>\n        <label>Username <input type=\"text\" name=\"username\" value={newUser} onChange={handleNewUser}/></label>\n        <label>Password <input type=\"password\" name=\"password\" value={newPassword} onChange={handleNewPassword}/></label>\n        <input type=\"submit\" value=\"Submit\" />\n    </form>\n\n    // insert forms into final component, and allow notifications to be flashed in appropriate positions\n    return (\n      <div>\n        <h1>Clubhub</h1>\n        <h2>Login</h2>\n        {loginComponent}\n        <br />\n        <h2>Create User</h2>\n        {createUserComponent}\n      </div>\n      \n    )\n}\n\nexport default LoginPage;","import { useSelector } from 'react-redux';\nimport BaseApp from './BaseApp'\nimport LoginPage from './LoginPage';\n\nconst App = () => {\n  const userId = useSelector(state => state.userId)\n  if (userId) {\n    return <BaseApp />\n  } else {\n    return <LoginPage />\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from './reducers/reducer'\n\n// thunk allows asynchronous actions\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport Store from './store';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n// wrap decorators around React App to provide \n// 1. redux state throughout app\n// 2. routing across app\nReactDOM.render(\n  <Provider store={Store}>\n    <Router> \n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}